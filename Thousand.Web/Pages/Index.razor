@page "/"
@page "/samples/{name}"

@using System.IO
@using Microsoft.Extensions.FileProviders

@rendermode InteractiveServer
@inject NavigationManager Navigation
@code {
    [Parameter] public string Name { get; set; }

    DiagramGenerator generator;
    IFileProvider provider;
    string source;
    string sample;
    Layout.Diagram doc;
    GenerationError[] err;
    OutputMode mode;

    string Source
    {
        get => source;
        set
        {
            source = value;
            Parse();
        }
    }

    string Sample
    {
        get => sample;
        set
        {
            sample = value;
            Navigation.NavigateTo("samples/" + sample[8..^5], true);
        }
    }

    string Renderer
    {
        get => mode.ToString();

        set => mode = Enum.Parse<OutputMode>(value);

    }

    protected override void OnInitialized()
    {
        generator = new DiagramGenerator();
        provider = new EmbeddedFileProvider(typeof(Program).Assembly);
    }

    protected override void OnParametersSet()
    {
        sample = $"samples.{Name??"flowchart"}.1000";
        var file = provider.GetFileInfo(sample);
        using (var sourceStream = file.CreateReadStream())
        {
            using (var reader = new StreamReader(sourceStream))
            {
                source = reader.ReadToEnd();
            }
        }

        Parse();
    }

    private void Parse()
    {
        doc = generator.GenerateDiagram(source).Match(result =>
        {
            err = result.Warnings;
            return result.Diagram;
        }, errors =>
        {
            err = errors;
            return null;
        });

        // XXX display the source-position errors in some nice way, maybe in a monaco editor

        StateHasChanged();
    }
}

<h2 class="title">Live Preview</h2>

<div class="layout">
    <div class="editor">
        <SourceEditor @key="sample" @bind-Source="Source" Errors="@err" />

        <div class="sample-selector">
            <label>Sample diagrams:</label>
            <select @bind="Sample">
                @foreach (var file in provider.GetDirectoryContents(""))
                {
                    <option value="@file.Name">@file.Name[8..]</option>
                }
            </select>
        </div>
    </div>

    <div class="preview">
        <LivePreview Mode="@mode" Diagram="@doc" Errors="@err" />

        <div class="sample-selector">
            <label>Renderer:</label>
            <select @bind="Renderer">
                <option value="SkiaSharp">SkiaSharp</option>
                <option value="SVG">SVG</option>
            </select>
        </div>
    </div>
</div>