@using System.IO
@code {
    [Parameter] public string Source { get; set; }
    Superpower.Tokenizer<TokenKind> tokenizer;
    Superpower.TokenListParser<TokenKind, AST.Document> parser;
    Render.Renderer renderer;
    string dataURL;
    string error;

    protected override void OnInitialized()
    {
        tokenizer = Tokenizer.Build();
        parser = Parser.Build();
        renderer = new Render.Renderer();
    }

    protected override void OnParametersSet()
    {
        try
        {
            var tokens = tokenizer.TryTokenize(Source);
            if (!tokens.HasValue)
            {
                dataURL = null;
                error = tokens.ToString();
                return;
            }

            var ast = parser(tokens.Value);
            if (!ast.HasValue)
            {
                dataURL = null;
                error = ast.ToString();
                return;
            }

            var diagram = Composer.Compose(ast.Value);
            var image = renderer.Render(diagram);
            using (var stream = new MemoryStream())
            {
                image.Encode().SaveTo(stream);
                var base64 = Convert.ToBase64String(stream.ToArray());

                dataURL = "data:image/png;base64," + base64;
                error = null;
            }
        }
        catch (Exception e)
        {
            dataURL = null;
            error = e.Message;
        }
    }
}

@if (error == null)
{
    <img src="@dataURL" />
}
else
{
    <p>@error</p>
}