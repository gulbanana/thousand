@using BlazorMonaco
@code {
    [Parameter] public string Source { get; set; }
    [Parameter] public EventCallback<string> SourceChanged { get; set; }
    private MonacoEditor editor;

    private StandaloneEditorConstructionOptions CreateOptions(MonacoEditor editor)
    {
        this.editor = editor;
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Value = Source,
            ScrollBeyondLastLine = false,
            Minimap = new EditorMinimapOptions
            {
                Enabled = false
            },
        };
    }

    private async Task ModelContentChanged(ModelContentChangedEvent e)
    {
        var value = await editor.GetValue();
        await SourceChanged.InvokeAsync(value.ToString());
    }
}

<MonacoEditor ConstructionOptions="CreateOptions" OnDidChangeModelContent="ModelContentChanged" />